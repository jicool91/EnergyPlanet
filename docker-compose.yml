# Docker Compose for local development

version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: energy-planet-postgres
    environment:
      POSTGRES_DB: energy_planet
      POSTGRES_USER: energyplanet_app
      POSTGRES_PASSWORD: dev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U energyplanet_app"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: energy-planet-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  backend:
    image: node:18-alpine
    working_dir: /app
    container_name: energy-planet-backend
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: energy_planet
      DB_USER: energyplanet_app
      DB_PASSWORD: dev_password
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: dev_jwt_secret_change_in_production
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
    volumes:
      - ./backend:/app
      - ./content:/app/content
    command: sh -c "npm install && npm run dev"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  webapp:
    image: node:18-alpine
    container_name: energy-planet-webapp
    ports:
      - "5173:5173"
    working_dir: /app
    environment:
      VITE_API_URL: http://localhost:3000/api/v1
    volumes:
      - ./webapp:/app
    command: sh -c "npm install && npm run dev"

volumes:
  postgres_data:
  redis_data:
